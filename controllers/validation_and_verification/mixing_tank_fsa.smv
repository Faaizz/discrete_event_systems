MODULE main

-- VARIABLES
VAR

-- INPUTS
B1: boolean;
B2: boolean;
LS_1: boolean;
LS_2: boolean;
err: boolean;
T_5: boolean;

-- INTERNAL VARIABLES
sus: {1,2,3};

-- STATES
Z0: boolean;
Z1: boolean;
Z2: boolean;
Z3: boolean;
Z4: boolean;


-- DEFINITIONS
DEFINE

-- TRANSITIONS
-- Z0 to Z1
t1:= Z0 & B1 & !LS_2;
-- Z0 to Z2
t2:= Z0 & B1 & LS_2;
-- Z3 to Z0
t3:= Z3 & !LS_1 & !B2;
-- Z1 to Z4
t4:= Z1 & B2;
-- Z4 to Z1
t5:= Z4 & B1 & (sus=1) & !B2;
-- Z1 to Z2
t6:= Z1 & LS_2 & !B2;
-- Z2 to Z4
t7:= Z2 & B2;
-- Z4 to Z2
t8:= Z4 & B1 & (sus=2) & !B2;
-- Z2 to Z3
t9:= Z2 & T_5 & !B2;
-- Z3 to Z4
t10:= Z3 & B2;
-- Z4 to Z3
t11:= Z4 & B1 & (sus=3) & !B2;

-- OUTPUTS
set_V1:= Z1;
set_V2:= Z1;
set_V3:= Z3;
set_M:= Z2;
reset_V1:= Z0 | Z2 | Z3 | Z4;
reset_V2:= Z0 | Z2 | Z3 | Z4;
reset_V3:= Z0 | Z1 | Z2 | Z4;
reset_M:= Z0 | Z1 | Z3 | Z4;

V1:= set_V1 & !reset_V1;
V2:= set_V2 & !reset_V2;
V3:= set_V3 & !reset_V3;
M:= set_M & !reset_M;


-- ASSIGNMENTS
ASSIGN

-- INPUTS
init(B1):= {TRUE, FALSE};
next(B1):=  case
                TRUE: {TRUE, FALSE};
            esac;

init(B2):= FALSE;
next(B2):=  case
                TRUE: {TRUE, FALSE};
            esac;

init(LS_1):= FALSE;
next(LS_1):=    case
                    TRUE: {TRUE, FALSE};
                esac;

init(LS_2):= FALSE;
next(LS_2):=    case
                    TRUE: {TRUE, FALSE};
                esac;

init(err):= {TRUE, FALSE};
next(err):= case
                TRUE: {TRUE, FALSE};
            esac;

init(sus):= {1,2,3};
next(sus):= case
                Z1: 1;
                Z2: 2;
                Z3: 3;
                TRUE: sus;
            esac;


-- STATES
-- Initial state
init(Z0):= TRUE;
next(Z0):=  case
                t1: FALSE;
                t2: FALSE;
                t3: TRUE;
                TRUE: Z0;
            esac;

init(Z1):= FALSE;
next(Z1):=  case
                t4: FALSE;
                t6: FALSE;
                t1: TRUE;
                t5: TRUE;
                TRUE: Z1;
            esac;

init(Z2):= FALSE;
next(Z2):=  case
                t7: FALSE;
                t9: FALSE;
                t2: TRUE;
                t6: TRUE;
                t8: TRUE;
                TRUE: Z2;
            esac;

init(Z3):= FALSE;
next(Z3):=  case
                t3: FALSE;
                t10: FALSE;
                t9: TRUE;
                t11: TRUE;
                TRUE: Z3;
            esac;
        
init(Z4):= FALSE;
next(Z4):=  case
                t5: FALSE;
                t8: FALSE;
                t11: FALSE;
                t4: TRUE;
                t7: TRUE;
                t10: TRUE;
                TRUE: Z4;
            esac;


-- SPECIFICATIONS
SPEC
-- If the tank is idle and not full and Start is ON, turn ON V1 and V2
AG( (Z0 & !LS_2 & B1 &!B2) -> AX( V1 & V2 & !V3 & !M ) );

SPEC
-- Whenever the tank is full, turn off V1 and V2 ans start M
AG( (LS_2 & Z1 & !B2) -> AX(!V1 & !V2 & !V3 & M) );

SPEC
-- When the tank is empty, turn off V3
AG( (!LS_1 & Z3 & !B2) ->  AX(!V1 & !V2 & !V3 & !M) );

SPEC
-- If Stop is pressed (B2), while a process is going on pressing Start later (B1) should resume the process
AG( (Z2 & B2) -> AX( (B1 & !B2) ->  AX(Z2) ) );
SPEC
AG( (Z1 & B2) -> AX( (B1 & !B2) ->  AX(Z1) ) );
SPEC
AG( (Z3 & B2) -> AX( (B1 & !B2) ->  AX(Z3) ) );
